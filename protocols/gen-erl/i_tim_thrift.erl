%%
%% Autogenerated by Thrift Compiler (0.17.0)
%%
%% DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
%%

-module(i_tim_thrift).
-behaviour(thrift_service).


-include("i_tim_thrift.hrl").

-export([struct_info/1, function_info/2, function_names/0]).

struct_info(_) -> erlang:error(function_clause).
%%% interface
% timStream(This, Param)
function_info('timStream', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimParam'}}}]}
;
function_info('timStream', reply_type) ->
  oneway_void;
function_info('timStream', exceptions) ->
  {struct, []}
;
% timStarttls(This)
function_info('timStarttls', params_type) ->
  {struct, []}
;
function_info('timStarttls', reply_type) ->
  oneway_void;
function_info('timStarttls', exceptions) ->
  {struct, []}
;
% timLogin(This, Tid, Pwd)
function_info('timLogin', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'Tid'}}},
          {2, string}]}
;
function_info('timLogin', reply_type) ->
  oneway_void;
function_info('timLogin', exceptions) ->
  {struct, []}
;
% timAck(This, Ab)
function_info('timAck', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimAckBean'}}}]}
;
function_info('timAck', reply_type) ->
  oneway_void;
function_info('timAck', exceptions) ->
  {struct, []}
;
% timPresence(This, Pbean)
function_info('timPresence', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimPBean'}}}]}
;
function_info('timPresence', reply_type) ->
  oneway_void;
function_info('timPresence', exceptions) ->
  {struct, []}
;
% timMessage(This, Mbean)
function_info('timMessage', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimMBean'}}}]}
;
function_info('timMessage', reply_type) ->
  oneway_void;
function_info('timMessage', exceptions) ->
  {struct, []}
;
% timPing(This, ThreadId)
function_info('timPing', params_type) ->
  {struct, [{1, string}]}
;
function_info('timPing', reply_type) ->
  oneway_void;
function_info('timPing', exceptions) ->
  {struct, []}
;
% timError(This, E)
function_info('timError', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimError'}}}]}
;
function_info('timError', reply_type) ->
  oneway_void;
function_info('timError', exceptions) ->
  {struct, []}
;
% timLogout(This)
function_info('timLogout', params_type) ->
  {struct, []}
;
function_info('timLogout', reply_type) ->
  oneway_void;
function_info('timLogout', exceptions) ->
  {struct, []}
;
% timRegist(This, Tid, Auth)
function_info('timRegist', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'Tid'}}},
          {2, string}]}
;
function_info('timRegist', reply_type) ->
  oneway_void;
function_info('timRegist', exceptions) ->
  {struct, []}
;
% timRoser(This, Roster)
function_info('timRoser', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimRoster'}}}]}
;
function_info('timRoser', reply_type) ->
  oneway_void;
function_info('timRoser', exceptions) ->
  {struct, []}
;
% timMessageList(This, MbeanList)
function_info('timMessageList', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimMBeanList'}}}]}
;
function_info('timMessageList', reply_type) ->
  oneway_void;
function_info('timMessageList', exceptions) ->
  {struct, []}
;
% timPresenceList(This, PbeanList)
function_info('timPresenceList', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimPBeanList'}}}]}
;
function_info('timPresenceList', reply_type) ->
  oneway_void;
function_info('timPresenceList', exceptions) ->
  {struct, []}
;
% timMessageIq(This, TimMsgIq, IqType)
function_info('timMessageIq', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimMessageIq'}}},
          {2, string}]}
;
function_info('timMessageIq', reply_type) ->
  oneway_void;
function_info('timMessageIq', exceptions) ->
  {struct, []}
;
% timMessageResult(This, Mbean)
function_info('timMessageResult', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimMBean'}}}]}
;
function_info('timMessageResult', reply_type) ->
  oneway_void;
function_info('timMessageResult', exceptions) ->
  {struct, []}
;
% timProperty(This, Tpb)
function_info('timProperty', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimPropertyBean'}}}]}
;
function_info('timProperty', reply_type) ->
  oneway_void;
function_info('timProperty', exceptions) ->
  {struct, []}
;
% timRemoteUserAuth(This, Tid, Pwd, Auth)
function_info('timRemoteUserAuth', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'Tid'}}},
          {2, string},
          {3, {struct, {'tim_types', 'TimAuth'}}}]}
;
function_info('timRemoteUserAuth', reply_type) ->
  {struct, {'tim_types', 'TimRemoteUserBean'}};
function_info('timRemoteUserAuth', exceptions) ->
  {struct, []}
;
% timRemoteUserGet(This, Tid, Auth)
function_info('timRemoteUserGet', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'Tid'}}},
          {2, {struct, {'tim_types', 'TimAuth'}}}]}
;
function_info('timRemoteUserGet', reply_type) ->
  {struct, {'tim_types', 'TimRemoteUserBean'}};
function_info('timRemoteUserGet', exceptions) ->
  {struct, []}
;
% timRemoteUserEdit(This, Tid, Ub, Auth)
function_info('timRemoteUserEdit', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'Tid'}}},
          {2, {struct, {'tim_types', 'TimUserBean'}}},
          {3, {struct, {'tim_types', 'TimAuth'}}}]}
;
function_info('timRemoteUserEdit', reply_type) ->
  {struct, {'tim_types', 'TimRemoteUserBean'}};
function_info('timRemoteUserEdit', exceptions) ->
  {struct, []}
;
% timResponsePresence(This, Pbean, Auth)
function_info('timResponsePresence', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimPBean'}}},
          {2, {struct, {'tim_types', 'TimAuth'}}}]}
;
function_info('timResponsePresence', reply_type) ->
  {struct, {'tim_types', 'TimResponseBean'}};
function_info('timResponsePresence', exceptions) ->
  {struct, []}
;
% timResponseMessage(This, Mbean, Auth)
function_info('timResponseMessage', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimMBean'}}},
          {2, {struct, {'tim_types', 'TimAuth'}}}]}
;
function_info('timResponseMessage', reply_type) ->
  {struct, {'tim_types', 'TimResponseBean'}};
function_info('timResponseMessage', exceptions) ->
  {struct, []}
;
% timResponseMessageIq(This, TimMsgIq, IqType, Auth)
function_info('timResponseMessageIq', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimMessageIq'}}},
          {2, string},
          {3, {struct, {'tim_types', 'TimAuth'}}}]}
;
function_info('timResponseMessageIq', reply_type) ->
  {struct, {'tim_types', 'TimMBeanList'}};
function_info('timResponseMessageIq', exceptions) ->
  {struct, []}
;
% timResponsePresenceList(This, PbeanList, Auth)
function_info('timResponsePresenceList', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimPBeanList'}}},
          {2, {struct, {'tim_types', 'TimAuth'}}}]}
;
function_info('timResponsePresenceList', reply_type) ->
  {struct, {'tim_types', 'TimResponseBean'}};
function_info('timResponsePresenceList', exceptions) ->
  {struct, []}
;
% timResponseMessageList(This, MbeanList, Auth)
function_info('timResponseMessageList', params_type) ->
  {struct, [{1, {struct, {'tim_types', 'TimMBeanList'}}},
          {2, {struct, {'tim_types', 'TimAuth'}}}]}
;
function_info('timResponseMessageList', reply_type) ->
  {struct, {'tim_types', 'TimResponseBean'}};
function_info('timResponseMessageList', exceptions) ->
  {struct, []}
;
function_info(_Func, _Info) -> erlang:error(function_clause).

function_names() -> 
  ['timStream', 'timStarttls', 'timLogin', 'timAck', 'timPresence', 'timMessage', 'timPing', 'timError', 'timLogout', 'timRegist', 'timRoser', 'timMessageList', 'timPresenceList', 'timMessageIq', 'timMessageResult', 'timProperty', 'timRemoteUserAuth', 'timRemoteUserGet', 'timRemoteUserEdit', 'timResponsePresence', 'timResponseMessage', 'timResponseMessageIq', 'timResponsePresenceList', 'timResponseMessageList'].

