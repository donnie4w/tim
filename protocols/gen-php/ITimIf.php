<?php
/**
 * Autogenerated by Thrift Compiler (0.17.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
use Thrift\Base\TBase;
use Thrift\Type\TType;
use Thrift\Type\TMessageType;
use Thrift\Exception\TException;
use Thrift\Exception\TProtocolException;
use Thrift\Protocol\TProtocol;
use Thrift\Protocol\TBinaryProtocolAccelerated;
use Thrift\Exception\TApplicationException;

interface ITimIf
{
    /**
     * 流程开始
     * 
     * @param \TimParam $param
     */
    public function timStream(\TimParam $param);
    /**
     * tls协议
     * 
     */
    public function timStarttls();
    /**
     * 登陆协议
     * 
     * @param \Tid $tid
     * @param string $pwd
     */
    public function timLogin(\Tid $tid, $pwd);
    /**
     * 回执信息
     * 
     * @param \TimAckBean $ab
     */
    public function timAck(\TimAckBean $ab);
    /**
     * 广播出席协议或接收广播协议
     * 
     * @param \TimPBean $pbean
     */
    public function timPresence(\TimPBean $pbean);
    /**
     * 发送信息或接收信息
     * 
     * @param \TimMBean $mbean
     */
    public function timMessage(\TimMBean $mbean);
    /**
     * ping 心跳协议
     * 
     * @param string $threadId
     */
    public function timPing($threadId);
    /**
     * 错误通知
     * 
     * @param \TimError $e
     */
    public function timError(\TimError $e);
    /**
     * 登出协议
     * 
     */
    public function timLogout();
    /**
     * 注册协议
     * 
     * @param \Tid $tid
     * @param string $auth
     */
    public function timRegist(\Tid $tid, $auth);
    /**
     * 花名册
     * 
     * @param \TimRoster $roster
     */
    public function timRoser(\TimRoster $roster);
    /**
     * 发送信息或接收信息列表（合流）
     * 
     * @param \TimMBeanList $mbeanList
     */
    public function timMessageList(\TimMBeanList $mbeanList);
    /**
     * 发送状态信息列表（合流）
     * 
     * @param \TimPBeanList $pbeanList
     */
    public function timPresenceList(\TimPBeanList $pbeanList);
    /**
     * 信息请求 get请求数据 del删除
     * 
     * @param \TimMessageIq $timMsgIq
     * @param string $iqType
     */
    public function timMessageIq(\TimMessageIq $timMsgIq, $iqType);
    /**
     * 信息请求
     * 
     * @param \TimMBean $mbean
     */
    public function timMessageResult(\TimMBean $mbean);
    /**
     * 用户协议属性请求
     * 
     * @param \TimPropertyBean $tpb
     */
    public function timProperty(\TimPropertyBean $tpb);
    /**
     * 请求远程验证信息
     * 
     * @param \Tid $tid
     * @param string $pwd
     * @param \TimAuth $auth
     * @return \TimRemoteUserBean
     */
    public function timRemoteUserAuth(\Tid $tid, $pwd, \TimAuth $auth);
    /**
     * 请求远程用户信息
     * 
     * @param \Tid $tid
     * @param \TimAuth $auth
     * @return \TimRemoteUserBean
     */
    public function timRemoteUserGet(\Tid $tid, \TimAuth $auth);
    /**
     * 编辑远程用户信息
     * 
     * @param \Tid $tid
     * @param \TimUserBean $ub
     * @param \TimAuth $auth
     * @return \TimRemoteUserBean
     */
    public function timRemoteUserEdit(\Tid $tid, \TimUserBean $ub, \TimAuth $auth);
    /**
     * 广播出席协议或接收广播协议
     * 
     * @param \TimPBean $pbean
     * @param \TimAuth $auth
     * @return \TimResponseBean
     */
    public function timResponsePresence(\TimPBean $pbean, \TimAuth $auth);
    /**
     * 发送信息或接收信息
     * 
     * @param \TimMBean $mbean
     * @param \TimAuth $auth
     * @return \TimResponseBean
     */
    public function timResponseMessage(\TimMBean $mbean, \TimAuth $auth);
    /**
     * 信息请求 get请求数据 del删除（辅助接口）
     * 
     * @param \TimMessageIq $timMsgIq
     * @param string $iqType
     * @param \TimAuth $auth
     * @return \TimMBeanList
     */
    public function timResponseMessageIq(\TimMessageIq $timMsgIq, $iqType, \TimAuth $auth);
    /**
     * 广播出席协议或接收广播协议
     * 
     * @param \TimPBeanList $pbeanList
     * @param \TimAuth $auth
     * @return \TimResponseBean
     */
    public function timResponsePresenceList(\TimPBeanList $pbeanList, \TimAuth $auth);
    /**
     * 发送信息或接收信息
     * 
     * @param \TimMBeanList $mbeanList
     * @param \TimAuth $auth
     * @return \TimResponseBean
     */
    public function timResponseMessageList(\TimMBeanList $mbeanList, \TimAuth $auth);
}
