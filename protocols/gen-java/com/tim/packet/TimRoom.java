/**
 * Autogenerated by Thrift Compiler (0.17.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.tim.packet;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.17.0)", date = "2023-02-11")
public class TimRoom implements org.apache.thrift.TBase<TimRoom, TimRoom._Fields>, java.io.Serializable, Cloneable, Comparable<TimRoom> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("TimRoom");

  private static final org.apache.thrift.protocol.TField TID_FIELD_DESC = new org.apache.thrift.protocol.TField("tid", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField FOUNDER_TID_FIELD_DESC = new org.apache.thrift.protocol.TField("founderTid", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField HOSTS_TID_FIELD_DESC = new org.apache.thrift.protocol.TField("HostsTid", org.apache.thrift.protocol.TType.LIST, (short)3);
  private static final org.apache.thrift.protocol.TField MEMBERS_TID_FIELD_DESC = new org.apache.thrift.protocol.TField("membersTid", org.apache.thrift.protocol.TType.LIST, (short)4);
  private static final org.apache.thrift.protocol.TField HEADURL_FIELD_DESC = new org.apache.thrift.protocol.TField("headurl", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField ROOM_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("roomName", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField DESC_FIELD_DESC = new org.apache.thrift.protocol.TField("desc", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField CREATE_TIME_FIELD_DESC = new org.apache.thrift.protocol.TField("createTime", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField EXTRA_LIST_FIELD_DESC = new org.apache.thrift.protocol.TField("extraList", org.apache.thrift.protocol.TType.LIST, (short)9);
  private static final org.apache.thrift.protocol.TField EXTRA_MAP_FIELD_DESC = new org.apache.thrift.protocol.TField("extraMap", org.apache.thrift.protocol.TType.MAP, (short)10);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new TimRoomStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new TimRoomTupleSchemeFactory();

  /**
   * 房间Tid
   */
  public @org.apache.thrift.annotation.Nullable Tid tid; // optional
  /**
   * 创建人Tid
   */
  public @org.apache.thrift.annotation.Nullable Tid founderTid; // optional
  /**
   * 主持人Tid
   */
  public @org.apache.thrift.annotation.Nullable java.util.List<Tid> HostsTid; // optional
  /**
   * memberTid
   */
  public @org.apache.thrift.annotation.Nullable java.util.List<Tid> membersTid; // optional
  /**
   * 头像地址 http://xxx.jpg
   */
  public @org.apache.thrift.annotation.Nullable java.lang.String headurl; // optional
  /**
   * 房间名称
   */
  public @org.apache.thrift.annotation.Nullable java.lang.String roomName; // optional
  /**
   * 房间说明
   */
  public @org.apache.thrift.annotation.Nullable java.lang.String desc; // optional
  /**
   * 房间创建时间
   */
  public @org.apache.thrift.annotation.Nullable TimTime createTime; // optional
  /**
   * 扩展字段
   */
  public @org.apache.thrift.annotation.Nullable java.util.List<TimNode> extraList; // optional
  public @org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> extraMap; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    /**
     * 房间Tid
     */
    TID((short)1, "tid"),
    /**
     * 创建人Tid
     */
    FOUNDER_TID((short)2, "founderTid"),
    /**
     * 主持人Tid
     */
    HOSTS_TID((short)3, "HostsTid"),
    /**
     * memberTid
     */
    MEMBERS_TID((short)4, "membersTid"),
    /**
     * 头像地址 http://xxx.jpg
     */
    HEADURL((short)5, "headurl"),
    /**
     * 房间名称
     */
    ROOM_NAME((short)6, "roomName"),
    /**
     * 房间说明
     */
    DESC((short)7, "desc"),
    /**
     * 房间创建时间
     */
    CREATE_TIME((short)8, "createTime"),
    /**
     * 扩展字段
     */
    EXTRA_LIST((short)9, "extraList"),
    EXTRA_MAP((short)10, "extraMap");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // TID
          return TID;
        case 2: // FOUNDER_TID
          return FOUNDER_TID;
        case 3: // HOSTS_TID
          return HOSTS_TID;
        case 4: // MEMBERS_TID
          return MEMBERS_TID;
        case 5: // HEADURL
          return HEADURL;
        case 6: // ROOM_NAME
          return ROOM_NAME;
        case 7: // DESC
          return DESC;
        case 8: // CREATE_TIME
          return CREATE_TIME;
        case 9: // EXTRA_LIST
          return EXTRA_LIST;
        case 10: // EXTRA_MAP
          return EXTRA_MAP;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    @Override
    public short getThriftFieldId() {
      return _thriftId;
    }

    @Override
    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.TID,_Fields.FOUNDER_TID,_Fields.HOSTS_TID,_Fields.MEMBERS_TID,_Fields.HEADURL,_Fields.ROOM_NAME,_Fields.DESC,_Fields.CREATE_TIME,_Fields.EXTRA_LIST,_Fields.EXTRA_MAP};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.TID, new org.apache.thrift.meta_data.FieldMetaData("tid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Tid.class)));
    tmpMap.put(_Fields.FOUNDER_TID, new org.apache.thrift.meta_data.FieldMetaData("founderTid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Tid.class)));
    tmpMap.put(_Fields.HOSTS_TID, new org.apache.thrift.meta_data.FieldMetaData("HostsTid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Tid.class))));
    tmpMap.put(_Fields.MEMBERS_TID, new org.apache.thrift.meta_data.FieldMetaData("membersTid", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, Tid.class))));
    tmpMap.put(_Fields.HEADURL, new org.apache.thrift.meta_data.FieldMetaData("headurl", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ROOM_NAME, new org.apache.thrift.meta_data.FieldMetaData("roomName", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DESC, new org.apache.thrift.meta_data.FieldMetaData("desc", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATE_TIME, new org.apache.thrift.meta_data.FieldMetaData("createTime", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TimTime.class)));
    tmpMap.put(_Fields.EXTRA_LIST, new org.apache.thrift.meta_data.FieldMetaData("extraList", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.ListMetaData(org.apache.thrift.protocol.TType.LIST, 
            new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TimNode.class))));
    tmpMap.put(_Fields.EXTRA_MAP, new org.apache.thrift.meta_data.FieldMetaData("extraMap", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.MapMetaData(org.apache.thrift.protocol.TType.MAP, 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING), 
            new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING))));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(TimRoom.class, metaDataMap);
  }

  public TimRoom() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public TimRoom(TimRoom other) {
    if (other.isSetTid()) {
      this.tid = new Tid(other.tid);
    }
    if (other.isSetFounderTid()) {
      this.founderTid = new Tid(other.founderTid);
    }
    if (other.isSetHostsTid()) {
      java.util.List<Tid> __this__HostsTid = new java.util.ArrayList<Tid>(other.HostsTid.size());
      for (Tid other_element : other.HostsTid) {
        __this__HostsTid.add(new Tid(other_element));
      }
      this.HostsTid = __this__HostsTid;
    }
    if (other.isSetMembersTid()) {
      java.util.List<Tid> __this__membersTid = new java.util.ArrayList<Tid>(other.membersTid.size());
      for (Tid other_element : other.membersTid) {
        __this__membersTid.add(new Tid(other_element));
      }
      this.membersTid = __this__membersTid;
    }
    if (other.isSetHeadurl()) {
      this.headurl = other.headurl;
    }
    if (other.isSetRoomName()) {
      this.roomName = other.roomName;
    }
    if (other.isSetDesc()) {
      this.desc = other.desc;
    }
    if (other.isSetCreateTime()) {
      this.createTime = new TimTime(other.createTime);
    }
    if (other.isSetExtraList()) {
      java.util.List<TimNode> __this__extraList = new java.util.ArrayList<TimNode>(other.extraList.size());
      for (TimNode other_element : other.extraList) {
        __this__extraList.add(new TimNode(other_element));
      }
      this.extraList = __this__extraList;
    }
    if (other.isSetExtraMap()) {
      java.util.Map<java.lang.String,java.lang.String> __this__extraMap = new java.util.HashMap<java.lang.String,java.lang.String>(other.extraMap);
      this.extraMap = __this__extraMap;
    }
  }

  @Override
  public TimRoom deepCopy() {
    return new TimRoom(this);
  }

  @Override
  public void clear() {
    this.tid = null;
    this.founderTid = null;
    this.HostsTid = null;
    this.membersTid = null;
    this.headurl = null;
    this.roomName = null;
    this.desc = null;
    this.createTime = null;
    this.extraList = null;
    this.extraMap = null;
  }

  /**
   * 房间Tid
   */
  @org.apache.thrift.annotation.Nullable
  public Tid getTid() {
    return this.tid;
  }

  /**
   * 房间Tid
   */
  public TimRoom setTid(@org.apache.thrift.annotation.Nullable Tid tid) {
    this.tid = tid;
    return this;
  }

  public void unsetTid() {
    this.tid = null;
  }

  /** Returns true if field tid is set (has been assigned a value) and false otherwise */
  public boolean isSetTid() {
    return this.tid != null;
  }

  public void setTidIsSet(boolean value) {
    if (!value) {
      this.tid = null;
    }
  }

  /**
   * 创建人Tid
   */
  @org.apache.thrift.annotation.Nullable
  public Tid getFounderTid() {
    return this.founderTid;
  }

  /**
   * 创建人Tid
   */
  public TimRoom setFounderTid(@org.apache.thrift.annotation.Nullable Tid founderTid) {
    this.founderTid = founderTid;
    return this;
  }

  public void unsetFounderTid() {
    this.founderTid = null;
  }

  /** Returns true if field founderTid is set (has been assigned a value) and false otherwise */
  public boolean isSetFounderTid() {
    return this.founderTid != null;
  }

  public void setFounderTidIsSet(boolean value) {
    if (!value) {
      this.founderTid = null;
    }
  }

  public int getHostsTidSize() {
    return (this.HostsTid == null) ? 0 : this.HostsTid.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<Tid> getHostsTidIterator() {
    return (this.HostsTid == null) ? null : this.HostsTid.iterator();
  }

  public void addToHostsTid(Tid elem) {
    if (this.HostsTid == null) {
      this.HostsTid = new java.util.ArrayList<Tid>();
    }
    this.HostsTid.add(elem);
  }

  /**
   * 主持人Tid
   */
  @org.apache.thrift.annotation.Nullable
  public java.util.List<Tid> getHostsTid() {
    return this.HostsTid;
  }

  /**
   * 主持人Tid
   */
  public TimRoom setHostsTid(@org.apache.thrift.annotation.Nullable java.util.List<Tid> HostsTid) {
    this.HostsTid = HostsTid;
    return this;
  }

  public void unsetHostsTid() {
    this.HostsTid = null;
  }

  /** Returns true if field HostsTid is set (has been assigned a value) and false otherwise */
  public boolean isSetHostsTid() {
    return this.HostsTid != null;
  }

  public void setHostsTidIsSet(boolean value) {
    if (!value) {
      this.HostsTid = null;
    }
  }

  public int getMembersTidSize() {
    return (this.membersTid == null) ? 0 : this.membersTid.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<Tid> getMembersTidIterator() {
    return (this.membersTid == null) ? null : this.membersTid.iterator();
  }

  public void addToMembersTid(Tid elem) {
    if (this.membersTid == null) {
      this.membersTid = new java.util.ArrayList<Tid>();
    }
    this.membersTid.add(elem);
  }

  /**
   * memberTid
   */
  @org.apache.thrift.annotation.Nullable
  public java.util.List<Tid> getMembersTid() {
    return this.membersTid;
  }

  /**
   * memberTid
   */
  public TimRoom setMembersTid(@org.apache.thrift.annotation.Nullable java.util.List<Tid> membersTid) {
    this.membersTid = membersTid;
    return this;
  }

  public void unsetMembersTid() {
    this.membersTid = null;
  }

  /** Returns true if field membersTid is set (has been assigned a value) and false otherwise */
  public boolean isSetMembersTid() {
    return this.membersTid != null;
  }

  public void setMembersTidIsSet(boolean value) {
    if (!value) {
      this.membersTid = null;
    }
  }

  /**
   * 头像地址 http://xxx.jpg
   */
  @org.apache.thrift.annotation.Nullable
  public java.lang.String getHeadurl() {
    return this.headurl;
  }

  /**
   * 头像地址 http://xxx.jpg
   */
  public TimRoom setHeadurl(@org.apache.thrift.annotation.Nullable java.lang.String headurl) {
    this.headurl = headurl;
    return this;
  }

  public void unsetHeadurl() {
    this.headurl = null;
  }

  /** Returns true if field headurl is set (has been assigned a value) and false otherwise */
  public boolean isSetHeadurl() {
    return this.headurl != null;
  }

  public void setHeadurlIsSet(boolean value) {
    if (!value) {
      this.headurl = null;
    }
  }

  /**
   * 房间名称
   */
  @org.apache.thrift.annotation.Nullable
  public java.lang.String getRoomName() {
    return this.roomName;
  }

  /**
   * 房间名称
   */
  public TimRoom setRoomName(@org.apache.thrift.annotation.Nullable java.lang.String roomName) {
    this.roomName = roomName;
    return this;
  }

  public void unsetRoomName() {
    this.roomName = null;
  }

  /** Returns true if field roomName is set (has been assigned a value) and false otherwise */
  public boolean isSetRoomName() {
    return this.roomName != null;
  }

  public void setRoomNameIsSet(boolean value) {
    if (!value) {
      this.roomName = null;
    }
  }

  /**
   * 房间说明
   */
  @org.apache.thrift.annotation.Nullable
  public java.lang.String getDesc() {
    return this.desc;
  }

  /**
   * 房间说明
   */
  public TimRoom setDesc(@org.apache.thrift.annotation.Nullable java.lang.String desc) {
    this.desc = desc;
    return this;
  }

  public void unsetDesc() {
    this.desc = null;
  }

  /** Returns true if field desc is set (has been assigned a value) and false otherwise */
  public boolean isSetDesc() {
    return this.desc != null;
  }

  public void setDescIsSet(boolean value) {
    if (!value) {
      this.desc = null;
    }
  }

  /**
   * 房间创建时间
   */
  @org.apache.thrift.annotation.Nullable
  public TimTime getCreateTime() {
    return this.createTime;
  }

  /**
   * 房间创建时间
   */
  public TimRoom setCreateTime(@org.apache.thrift.annotation.Nullable TimTime createTime) {
    this.createTime = createTime;
    return this;
  }

  public void unsetCreateTime() {
    this.createTime = null;
  }

  /** Returns true if field createTime is set (has been assigned a value) and false otherwise */
  public boolean isSetCreateTime() {
    return this.createTime != null;
  }

  public void setCreateTimeIsSet(boolean value) {
    if (!value) {
      this.createTime = null;
    }
  }

  public int getExtraListSize() {
    return (this.extraList == null) ? 0 : this.extraList.size();
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Iterator<TimNode> getExtraListIterator() {
    return (this.extraList == null) ? null : this.extraList.iterator();
  }

  public void addToExtraList(TimNode elem) {
    if (this.extraList == null) {
      this.extraList = new java.util.ArrayList<TimNode>();
    }
    this.extraList.add(elem);
  }

  /**
   * 扩展字段
   */
  @org.apache.thrift.annotation.Nullable
  public java.util.List<TimNode> getExtraList() {
    return this.extraList;
  }

  /**
   * 扩展字段
   */
  public TimRoom setExtraList(@org.apache.thrift.annotation.Nullable java.util.List<TimNode> extraList) {
    this.extraList = extraList;
    return this;
  }

  public void unsetExtraList() {
    this.extraList = null;
  }

  /** Returns true if field extraList is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraList() {
    return this.extraList != null;
  }

  public void setExtraListIsSet(boolean value) {
    if (!value) {
      this.extraList = null;
    }
  }

  public int getExtraMapSize() {
    return (this.extraMap == null) ? 0 : this.extraMap.size();
  }

  public void putToExtraMap(java.lang.String key, java.lang.String val) {
    if (this.extraMap == null) {
      this.extraMap = new java.util.HashMap<java.lang.String,java.lang.String>();
    }
    this.extraMap.put(key, val);
  }

  @org.apache.thrift.annotation.Nullable
  public java.util.Map<java.lang.String,java.lang.String> getExtraMap() {
    return this.extraMap;
  }

  public TimRoom setExtraMap(@org.apache.thrift.annotation.Nullable java.util.Map<java.lang.String,java.lang.String> extraMap) {
    this.extraMap = extraMap;
    return this;
  }

  public void unsetExtraMap() {
    this.extraMap = null;
  }

  /** Returns true if field extraMap is set (has been assigned a value) and false otherwise */
  public boolean isSetExtraMap() {
    return this.extraMap != null;
  }

  public void setExtraMapIsSet(boolean value) {
    if (!value) {
      this.extraMap = null;
    }
  }

  @Override
  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case TID:
      if (value == null) {
        unsetTid();
      } else {
        setTid((Tid)value);
      }
      break;

    case FOUNDER_TID:
      if (value == null) {
        unsetFounderTid();
      } else {
        setFounderTid((Tid)value);
      }
      break;

    case HOSTS_TID:
      if (value == null) {
        unsetHostsTid();
      } else {
        setHostsTid((java.util.List<Tid>)value);
      }
      break;

    case MEMBERS_TID:
      if (value == null) {
        unsetMembersTid();
      } else {
        setMembersTid((java.util.List<Tid>)value);
      }
      break;

    case HEADURL:
      if (value == null) {
        unsetHeadurl();
      } else {
        setHeadurl((java.lang.String)value);
      }
      break;

    case ROOM_NAME:
      if (value == null) {
        unsetRoomName();
      } else {
        setRoomName((java.lang.String)value);
      }
      break;

    case DESC:
      if (value == null) {
        unsetDesc();
      } else {
        setDesc((java.lang.String)value);
      }
      break;

    case CREATE_TIME:
      if (value == null) {
        unsetCreateTime();
      } else {
        setCreateTime((TimTime)value);
      }
      break;

    case EXTRA_LIST:
      if (value == null) {
        unsetExtraList();
      } else {
        setExtraList((java.util.List<TimNode>)value);
      }
      break;

    case EXTRA_MAP:
      if (value == null) {
        unsetExtraMap();
      } else {
        setExtraMap((java.util.Map<java.lang.String,java.lang.String>)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case TID:
      return getTid();

    case FOUNDER_TID:
      return getFounderTid();

    case HOSTS_TID:
      return getHostsTid();

    case MEMBERS_TID:
      return getMembersTid();

    case HEADURL:
      return getHeadurl();

    case ROOM_NAME:
      return getRoomName();

    case DESC:
      return getDesc();

    case CREATE_TIME:
      return getCreateTime();

    case EXTRA_LIST:
      return getExtraList();

    case EXTRA_MAP:
      return getExtraMap();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  @Override
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case TID:
      return isSetTid();
    case FOUNDER_TID:
      return isSetFounderTid();
    case HOSTS_TID:
      return isSetHostsTid();
    case MEMBERS_TID:
      return isSetMembersTid();
    case HEADURL:
      return isSetHeadurl();
    case ROOM_NAME:
      return isSetRoomName();
    case DESC:
      return isSetDesc();
    case CREATE_TIME:
      return isSetCreateTime();
    case EXTRA_LIST:
      return isSetExtraList();
    case EXTRA_MAP:
      return isSetExtraMap();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof TimRoom)
      return this.equals((TimRoom)that);
    return false;
  }

  public boolean equals(TimRoom that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_tid = true && this.isSetTid();
    boolean that_present_tid = true && that.isSetTid();
    if (this_present_tid || that_present_tid) {
      if (!(this_present_tid && that_present_tid))
        return false;
      if (!this.tid.equals(that.tid))
        return false;
    }

    boolean this_present_founderTid = true && this.isSetFounderTid();
    boolean that_present_founderTid = true && that.isSetFounderTid();
    if (this_present_founderTid || that_present_founderTid) {
      if (!(this_present_founderTid && that_present_founderTid))
        return false;
      if (!this.founderTid.equals(that.founderTid))
        return false;
    }

    boolean this_present_HostsTid = true && this.isSetHostsTid();
    boolean that_present_HostsTid = true && that.isSetHostsTid();
    if (this_present_HostsTid || that_present_HostsTid) {
      if (!(this_present_HostsTid && that_present_HostsTid))
        return false;
      if (!this.HostsTid.equals(that.HostsTid))
        return false;
    }

    boolean this_present_membersTid = true && this.isSetMembersTid();
    boolean that_present_membersTid = true && that.isSetMembersTid();
    if (this_present_membersTid || that_present_membersTid) {
      if (!(this_present_membersTid && that_present_membersTid))
        return false;
      if (!this.membersTid.equals(that.membersTid))
        return false;
    }

    boolean this_present_headurl = true && this.isSetHeadurl();
    boolean that_present_headurl = true && that.isSetHeadurl();
    if (this_present_headurl || that_present_headurl) {
      if (!(this_present_headurl && that_present_headurl))
        return false;
      if (!this.headurl.equals(that.headurl))
        return false;
    }

    boolean this_present_roomName = true && this.isSetRoomName();
    boolean that_present_roomName = true && that.isSetRoomName();
    if (this_present_roomName || that_present_roomName) {
      if (!(this_present_roomName && that_present_roomName))
        return false;
      if (!this.roomName.equals(that.roomName))
        return false;
    }

    boolean this_present_desc = true && this.isSetDesc();
    boolean that_present_desc = true && that.isSetDesc();
    if (this_present_desc || that_present_desc) {
      if (!(this_present_desc && that_present_desc))
        return false;
      if (!this.desc.equals(that.desc))
        return false;
    }

    boolean this_present_createTime = true && this.isSetCreateTime();
    boolean that_present_createTime = true && that.isSetCreateTime();
    if (this_present_createTime || that_present_createTime) {
      if (!(this_present_createTime && that_present_createTime))
        return false;
      if (!this.createTime.equals(that.createTime))
        return false;
    }

    boolean this_present_extraList = true && this.isSetExtraList();
    boolean that_present_extraList = true && that.isSetExtraList();
    if (this_present_extraList || that_present_extraList) {
      if (!(this_present_extraList && that_present_extraList))
        return false;
      if (!this.extraList.equals(that.extraList))
        return false;
    }

    boolean this_present_extraMap = true && this.isSetExtraMap();
    boolean that_present_extraMap = true && that.isSetExtraMap();
    if (this_present_extraMap || that_present_extraMap) {
      if (!(this_present_extraMap && that_present_extraMap))
        return false;
      if (!this.extraMap.equals(that.extraMap))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetTid()) ? 131071 : 524287);
    if (isSetTid())
      hashCode = hashCode * 8191 + tid.hashCode();

    hashCode = hashCode * 8191 + ((isSetFounderTid()) ? 131071 : 524287);
    if (isSetFounderTid())
      hashCode = hashCode * 8191 + founderTid.hashCode();

    hashCode = hashCode * 8191 + ((isSetHostsTid()) ? 131071 : 524287);
    if (isSetHostsTid())
      hashCode = hashCode * 8191 + HostsTid.hashCode();

    hashCode = hashCode * 8191 + ((isSetMembersTid()) ? 131071 : 524287);
    if (isSetMembersTid())
      hashCode = hashCode * 8191 + membersTid.hashCode();

    hashCode = hashCode * 8191 + ((isSetHeadurl()) ? 131071 : 524287);
    if (isSetHeadurl())
      hashCode = hashCode * 8191 + headurl.hashCode();

    hashCode = hashCode * 8191 + ((isSetRoomName()) ? 131071 : 524287);
    if (isSetRoomName())
      hashCode = hashCode * 8191 + roomName.hashCode();

    hashCode = hashCode * 8191 + ((isSetDesc()) ? 131071 : 524287);
    if (isSetDesc())
      hashCode = hashCode * 8191 + desc.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreateTime()) ? 131071 : 524287);
    if (isSetCreateTime())
      hashCode = hashCode * 8191 + createTime.hashCode();

    hashCode = hashCode * 8191 + ((isSetExtraList()) ? 131071 : 524287);
    if (isSetExtraList())
      hashCode = hashCode * 8191 + extraList.hashCode();

    hashCode = hashCode * 8191 + ((isSetExtraMap()) ? 131071 : 524287);
    if (isSetExtraMap())
      hashCode = hashCode * 8191 + extraMap.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(TimRoom other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetTid(), other.isSetTid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.tid, other.tid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetFounderTid(), other.isSetFounderTid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFounderTid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.founderTid, other.founderTid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetHostsTid(), other.isSetHostsTid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHostsTid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.HostsTid, other.HostsTid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetMembersTid(), other.isSetMembersTid());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetMembersTid()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.membersTid, other.membersTid);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetHeadurl(), other.isSetHeadurl());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetHeadurl()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.headurl, other.headurl);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetRoomName(), other.isSetRoomName());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRoomName()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.roomName, other.roomName);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDesc(), other.isSetDesc());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDesc()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.desc, other.desc);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetCreateTime(), other.isSetCreateTime());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreateTime()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.createTime, other.createTime);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetExtraList(), other.isSetExtraList());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraList()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraList, other.extraList);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetExtraMap(), other.isSetExtraMap());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetExtraMap()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.extraMap, other.extraMap);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  @Override
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  @Override
  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  @Override
  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("TimRoom(");
    boolean first = true;

    if (isSetTid()) {
      sb.append("tid:");
      if (this.tid == null) {
        sb.append("null");
      } else {
        sb.append(this.tid);
      }
      first = false;
    }
    if (isSetFounderTid()) {
      if (!first) sb.append(", ");
      sb.append("founderTid:");
      if (this.founderTid == null) {
        sb.append("null");
      } else {
        sb.append(this.founderTid);
      }
      first = false;
    }
    if (isSetHostsTid()) {
      if (!first) sb.append(", ");
      sb.append("HostsTid:");
      if (this.HostsTid == null) {
        sb.append("null");
      } else {
        sb.append(this.HostsTid);
      }
      first = false;
    }
    if (isSetMembersTid()) {
      if (!first) sb.append(", ");
      sb.append("membersTid:");
      if (this.membersTid == null) {
        sb.append("null");
      } else {
        sb.append(this.membersTid);
      }
      first = false;
    }
    if (isSetHeadurl()) {
      if (!first) sb.append(", ");
      sb.append("headurl:");
      if (this.headurl == null) {
        sb.append("null");
      } else {
        sb.append(this.headurl);
      }
      first = false;
    }
    if (isSetRoomName()) {
      if (!first) sb.append(", ");
      sb.append("roomName:");
      if (this.roomName == null) {
        sb.append("null");
      } else {
        sb.append(this.roomName);
      }
      first = false;
    }
    if (isSetDesc()) {
      if (!first) sb.append(", ");
      sb.append("desc:");
      if (this.desc == null) {
        sb.append("null");
      } else {
        sb.append(this.desc);
      }
      first = false;
    }
    if (isSetCreateTime()) {
      if (!first) sb.append(", ");
      sb.append("createTime:");
      if (this.createTime == null) {
        sb.append("null");
      } else {
        sb.append(this.createTime);
      }
      first = false;
    }
    if (isSetExtraList()) {
      if (!first) sb.append(", ");
      sb.append("extraList:");
      if (this.extraList == null) {
        sb.append("null");
      } else {
        sb.append(this.extraList);
      }
      first = false;
    }
    if (isSetExtraMap()) {
      if (!first) sb.append(", ");
      sb.append("extraMap:");
      if (this.extraMap == null) {
        sb.append("null");
      } else {
        sb.append(this.extraMap);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (tid != null) {
      tid.validate();
    }
    if (founderTid != null) {
      founderTid.validate();
    }
    if (createTime != null) {
      createTime.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class TimRoomStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TimRoomStandardScheme getScheme() {
      return new TimRoomStandardScheme();
    }
  }

  private static class TimRoomStandardScheme extends org.apache.thrift.scheme.StandardScheme<TimRoom> {

    @Override
    public void read(org.apache.thrift.protocol.TProtocol iprot, TimRoom struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // TID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.tid = new Tid();
              struct.tid.read(iprot);
              struct.setTidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // FOUNDER_TID
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.founderTid = new Tid();
              struct.founderTid.read(iprot);
              struct.setFounderTidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // HOSTS_TID
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list98 = iprot.readListBegin();
                struct.HostsTid = new java.util.ArrayList<Tid>(_list98.size);
                @org.apache.thrift.annotation.Nullable Tid _elem99;
                for (int _i100 = 0; _i100 < _list98.size; ++_i100)
                {
                  _elem99 = new Tid();
                  _elem99.read(iprot);
                  struct.HostsTid.add(_elem99);
                }
                iprot.readListEnd();
              }
              struct.setHostsTidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // MEMBERS_TID
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list101 = iprot.readListBegin();
                struct.membersTid = new java.util.ArrayList<Tid>(_list101.size);
                @org.apache.thrift.annotation.Nullable Tid _elem102;
                for (int _i103 = 0; _i103 < _list101.size; ++_i103)
                {
                  _elem102 = new Tid();
                  _elem102.read(iprot);
                  struct.membersTid.add(_elem102);
                }
                iprot.readListEnd();
              }
              struct.setMembersTidIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // HEADURL
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.headurl = iprot.readString();
              struct.setHeadurlIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // ROOM_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.roomName = iprot.readString();
              struct.setRoomNameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // DESC
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.desc = iprot.readString();
              struct.setDescIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // CREATE_TIME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.createTime = new TimTime();
              struct.createTime.read(iprot);
              struct.setCreateTimeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // EXTRA_LIST
            if (schemeField.type == org.apache.thrift.protocol.TType.LIST) {
              {
                org.apache.thrift.protocol.TList _list104 = iprot.readListBegin();
                struct.extraList = new java.util.ArrayList<TimNode>(_list104.size);
                @org.apache.thrift.annotation.Nullable TimNode _elem105;
                for (int _i106 = 0; _i106 < _list104.size; ++_i106)
                {
                  _elem105 = new TimNode();
                  _elem105.read(iprot);
                  struct.extraList.add(_elem105);
                }
                iprot.readListEnd();
              }
              struct.setExtraListIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // EXTRA_MAP
            if (schemeField.type == org.apache.thrift.protocol.TType.MAP) {
              {
                org.apache.thrift.protocol.TMap _map107 = iprot.readMapBegin();
                struct.extraMap = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map107.size);
                @org.apache.thrift.annotation.Nullable java.lang.String _key108;
                @org.apache.thrift.annotation.Nullable java.lang.String _val109;
                for (int _i110 = 0; _i110 < _map107.size; ++_i110)
                {
                  _key108 = iprot.readString();
                  _val109 = iprot.readString();
                  struct.extraMap.put(_key108, _val109);
                }
                iprot.readMapEnd();
              }
              struct.setExtraMapIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    @Override
    public void write(org.apache.thrift.protocol.TProtocol oprot, TimRoom struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.tid != null) {
        if (struct.isSetTid()) {
          oprot.writeFieldBegin(TID_FIELD_DESC);
          struct.tid.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.founderTid != null) {
        if (struct.isSetFounderTid()) {
          oprot.writeFieldBegin(FOUNDER_TID_FIELD_DESC);
          struct.founderTid.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.HostsTid != null) {
        if (struct.isSetHostsTid()) {
          oprot.writeFieldBegin(HOSTS_TID_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.HostsTid.size()));
            for (Tid _iter111 : struct.HostsTid)
            {
              _iter111.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.membersTid != null) {
        if (struct.isSetMembersTid()) {
          oprot.writeFieldBegin(MEMBERS_TID_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.membersTid.size()));
            for (Tid _iter112 : struct.membersTid)
            {
              _iter112.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.headurl != null) {
        if (struct.isSetHeadurl()) {
          oprot.writeFieldBegin(HEADURL_FIELD_DESC);
          oprot.writeString(struct.headurl);
          oprot.writeFieldEnd();
        }
      }
      if (struct.roomName != null) {
        if (struct.isSetRoomName()) {
          oprot.writeFieldBegin(ROOM_NAME_FIELD_DESC);
          oprot.writeString(struct.roomName);
          oprot.writeFieldEnd();
        }
      }
      if (struct.desc != null) {
        if (struct.isSetDesc()) {
          oprot.writeFieldBegin(DESC_FIELD_DESC);
          oprot.writeString(struct.desc);
          oprot.writeFieldEnd();
        }
      }
      if (struct.createTime != null) {
        if (struct.isSetCreateTime()) {
          oprot.writeFieldBegin(CREATE_TIME_FIELD_DESC);
          struct.createTime.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.extraList != null) {
        if (struct.isSetExtraList()) {
          oprot.writeFieldBegin(EXTRA_LIST_FIELD_DESC);
          {
            oprot.writeListBegin(new org.apache.thrift.protocol.TList(org.apache.thrift.protocol.TType.STRUCT, struct.extraList.size()));
            for (TimNode _iter113 : struct.extraList)
            {
              _iter113.write(oprot);
            }
            oprot.writeListEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      if (struct.extraMap != null) {
        if (struct.isSetExtraMap()) {
          oprot.writeFieldBegin(EXTRA_MAP_FIELD_DESC);
          {
            oprot.writeMapBegin(new org.apache.thrift.protocol.TMap(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING, struct.extraMap.size()));
            for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter114 : struct.extraMap.entrySet())
            {
              oprot.writeString(_iter114.getKey());
              oprot.writeString(_iter114.getValue());
            }
            oprot.writeMapEnd();
          }
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class TimRoomTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    @Override
    public TimRoomTupleScheme getScheme() {
      return new TimRoomTupleScheme();
    }
  }

  private static class TimRoomTupleScheme extends org.apache.thrift.scheme.TupleScheme<TimRoom> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, TimRoom struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetTid()) {
        optionals.set(0);
      }
      if (struct.isSetFounderTid()) {
        optionals.set(1);
      }
      if (struct.isSetHostsTid()) {
        optionals.set(2);
      }
      if (struct.isSetMembersTid()) {
        optionals.set(3);
      }
      if (struct.isSetHeadurl()) {
        optionals.set(4);
      }
      if (struct.isSetRoomName()) {
        optionals.set(5);
      }
      if (struct.isSetDesc()) {
        optionals.set(6);
      }
      if (struct.isSetCreateTime()) {
        optionals.set(7);
      }
      if (struct.isSetExtraList()) {
        optionals.set(8);
      }
      if (struct.isSetExtraMap()) {
        optionals.set(9);
      }
      oprot.writeBitSet(optionals, 10);
      if (struct.isSetTid()) {
        struct.tid.write(oprot);
      }
      if (struct.isSetFounderTid()) {
        struct.founderTid.write(oprot);
      }
      if (struct.isSetHostsTid()) {
        {
          oprot.writeI32(struct.HostsTid.size());
          for (Tid _iter115 : struct.HostsTid)
          {
            _iter115.write(oprot);
          }
        }
      }
      if (struct.isSetMembersTid()) {
        {
          oprot.writeI32(struct.membersTid.size());
          for (Tid _iter116 : struct.membersTid)
          {
            _iter116.write(oprot);
          }
        }
      }
      if (struct.isSetHeadurl()) {
        oprot.writeString(struct.headurl);
      }
      if (struct.isSetRoomName()) {
        oprot.writeString(struct.roomName);
      }
      if (struct.isSetDesc()) {
        oprot.writeString(struct.desc);
      }
      if (struct.isSetCreateTime()) {
        struct.createTime.write(oprot);
      }
      if (struct.isSetExtraList()) {
        {
          oprot.writeI32(struct.extraList.size());
          for (TimNode _iter117 : struct.extraList)
          {
            _iter117.write(oprot);
          }
        }
      }
      if (struct.isSetExtraMap()) {
        {
          oprot.writeI32(struct.extraMap.size());
          for (java.util.Map.Entry<java.lang.String, java.lang.String> _iter118 : struct.extraMap.entrySet())
          {
            oprot.writeString(_iter118.getKey());
            oprot.writeString(_iter118.getValue());
          }
        }
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, TimRoom struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(10);
      if (incoming.get(0)) {
        struct.tid = new Tid();
        struct.tid.read(iprot);
        struct.setTidIsSet(true);
      }
      if (incoming.get(1)) {
        struct.founderTid = new Tid();
        struct.founderTid.read(iprot);
        struct.setFounderTidIsSet(true);
      }
      if (incoming.get(2)) {
        {
          org.apache.thrift.protocol.TList _list119 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.HostsTid = new java.util.ArrayList<Tid>(_list119.size);
          @org.apache.thrift.annotation.Nullable Tid _elem120;
          for (int _i121 = 0; _i121 < _list119.size; ++_i121)
          {
            _elem120 = new Tid();
            _elem120.read(iprot);
            struct.HostsTid.add(_elem120);
          }
        }
        struct.setHostsTidIsSet(true);
      }
      if (incoming.get(3)) {
        {
          org.apache.thrift.protocol.TList _list122 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.membersTid = new java.util.ArrayList<Tid>(_list122.size);
          @org.apache.thrift.annotation.Nullable Tid _elem123;
          for (int _i124 = 0; _i124 < _list122.size; ++_i124)
          {
            _elem123 = new Tid();
            _elem123.read(iprot);
            struct.membersTid.add(_elem123);
          }
        }
        struct.setMembersTidIsSet(true);
      }
      if (incoming.get(4)) {
        struct.headurl = iprot.readString();
        struct.setHeadurlIsSet(true);
      }
      if (incoming.get(5)) {
        struct.roomName = iprot.readString();
        struct.setRoomNameIsSet(true);
      }
      if (incoming.get(6)) {
        struct.desc = iprot.readString();
        struct.setDescIsSet(true);
      }
      if (incoming.get(7)) {
        struct.createTime = new TimTime();
        struct.createTime.read(iprot);
        struct.setCreateTimeIsSet(true);
      }
      if (incoming.get(8)) {
        {
          org.apache.thrift.protocol.TList _list125 = iprot.readListBegin(org.apache.thrift.protocol.TType.STRUCT);
          struct.extraList = new java.util.ArrayList<TimNode>(_list125.size);
          @org.apache.thrift.annotation.Nullable TimNode _elem126;
          for (int _i127 = 0; _i127 < _list125.size; ++_i127)
          {
            _elem126 = new TimNode();
            _elem126.read(iprot);
            struct.extraList.add(_elem126);
          }
        }
        struct.setExtraListIsSet(true);
      }
      if (incoming.get(9)) {
        {
          org.apache.thrift.protocol.TMap _map128 = iprot.readMapBegin(org.apache.thrift.protocol.TType.STRING, org.apache.thrift.protocol.TType.STRING); 
          struct.extraMap = new java.util.HashMap<java.lang.String,java.lang.String>(2*_map128.size);
          @org.apache.thrift.annotation.Nullable java.lang.String _key129;
          @org.apache.thrift.annotation.Nullable java.lang.String _val130;
          for (int _i131 = 0; _i131 < _map128.size; ++_i131)
          {
            _key129 = iprot.readString();
            _val130 = iprot.readString();
            struct.extraMap.put(_key129, _val130);
          }
        }
        struct.setExtraMapIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

